// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

enum Status {
  waiting
  inProgress
  complete
}

enum Current {
  player1
  player2
  bot
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  username    String    @unique
  password    String
  createdAt   DateTime  @default(now())
  lastLogin   DateTime?
  url         String?
  gamesPlayed Int       @default(0)
  gamesWon    Int       @default(0)
  gamesLost   Int       @default(0)
  gamesDrawn  Int       @default(0)
  gamesAsPlayer1 Game[]   @relation("Player1")
  gamesAsPlayer2 Game[]   @relation("Player2")
  Chat           Chat[]
}

model Game {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  lobbyName String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  board     Int[]     @default([4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 0])  
  status    Status    @default(waiting)
  current   Current   @default(player1)
  player1   String    @db.ObjectId
  player2   String?   @db.ObjectId
  winner    String    @default("")

  player1User User @relation("Player1", fields: [player1], references: [id])
  player2User User? @relation("Player2", fields: [player2], references: [id])
}

model Chat {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  username  String    
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  message   String
  userId    String    @db.ObjectId
  game      String?   @db.ObjectId
  url       String

  user User @relation(fields: [userId], references: [id])
}